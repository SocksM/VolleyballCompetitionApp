using VolleyballCompetitionApp.Interfaces.DTOs;
using VolleyballCompetitionApp.Interfaces.RepositoryInterfaces;

namespace VolleyballCompetitionApp.Repository
{
	public class PlayerRepository : IPlayerRepository
	{
		private readonly string _connectionString;

		public PlayerRepository(string connectionString) => _connectionString = connectionString;

		public int Create(int teamId, string name) // returns an int because the integer will be auto generated by the database so when you create the row you will be able to know what the id is
		{// the dto parameter shouldnt have a id yet (aka default int value) because the database will decide what the value will be
		 // database connection and data uploading 

			// no error's? return auto generated id (int)
			return 1;
		}
		// possible issue which could arise and need to be take care of 

		#region Find Methods

		public PlayerDTO FindById(int id) // gets data from the database depending on the id
		{
			PlayerDTO output = new PlayerDTO { };
			// data base connection and data fetching

			// database connection and data fetching

			// no error's? return filled dto.
			return output;
		}

		public List<PlayerDTO> FindByTeamId(int teamId) // gets data from the database depending on the id
		{
			List<PlayerDTO> output = new List<PlayerDTO>();
			// data base connection and data fetching

			// database connection and data fetching

			// no error's? return filled dto.
			return output;
		}

		#endregion

		public void Update(int id, int teamId, string name) // uses dto.id to dicate to what row it alters then alters that row
		{
			// dto validation (does it have all variable's filled etc?)

			// database connection and data uploading/dating
		}

		public void Delete(int id)
		{
			// database connection and data deletion
		}
	}
}
